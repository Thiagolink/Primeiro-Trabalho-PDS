
import Imagem.ScaleImage;
import Imagem.Segmentation;
import Imagem.ToColor;
import Files.TextFileToTAD;
import Files.CreateTextFiles;
import Files.ICreateFiles;
import Files.IFileToTAD;
import Files.IReadFiles;
import Files.IRenameFiles;
import Files.IWriteFiles;
import Files.ReadTextFiles;
import Files.RenameTextFiles;
import Files.WriteTextFiles;
import br.ufrn.imd.lp2.imagesegmentation.ImageInformation;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Thiago Oliveira
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    
    //Inteiro com localização do mouse em x.
    int mouseX1 = 0, mouseX2 = 0;
    //Inteiro com localização do mouse em y.
    int mouseY1 = 0, mouseY2 = 0;
    //Informações da Imagem segmentada.
    ImageInformation seg;
       
    //Cria um objeto da classe Segmentation.
    Segmentation imageTreatment = new Segmentation(); 
    
    //Cria um objeto da classe Manager.
    Manager manager = new Manager();
    
    //Cria um objeto da classe TADManipulation
    TADManipulation tadManipulation = new TADManipulation();
    
    //Cria um objeto da classe ToColor.
    ToColor toColor = new ToColor();
    
    //Cria um objeto da classe Checking.
    Checking checking = new Checking();
    
    ScaleImage scaleImage = new ScaleImage();
    
    //Cria um objeto da classe RenameTextFiles.
    IRenameFiles rename= new RenameTextFiles();
    
    //Cria um objeto da classe WriteTextFiles.
    IWriteFiles writeFiles = new WriteTextFiles();
    
    //Cria um objeto da classe ReadTextFiles.
    IReadFiles readFiles = new ReadTextFiles();
    
    //Cria um objeto da classe TextFileToTAD.
    IFileToTAD fileToTAD = new TextFileToTAD();
    
    //Cria um objeto da classe CreateTextFiles
    ICreateFiles createTextFiles = new CreateTextFiles();
    
    //ArrayList com o nome das regiões da imagem para ser usado como índice para o map.
    ArrayList<String> list = new ArrayList<>();
    
    //ArrayList com regiões já marcadas
    ArrayList<Integer> listInt = new ArrayList<>();
    
    //ArrayList com as regiões que foram selecionadas.
    ArrayList<String> listRegions = new ArrayList<>();
    
    //ArrayList com o nome de todas as regiões.
    Set<String> setRegionsNames = new HashSet<>();
    
    //Map com o índice sendo o nome e o Intenger sendo os valor de x e y da imageTreatment.
    Map<String, Integer[]> map = new HashMap<>();
    

    
    
    
    public GUI() {
        initComponents();
        createTextFiles.createFolder();
        initRegions();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        Image = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton5 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setText("0.99");

        jTextField2.setText("50");

        jTextField3.setText("500");

        jButton1.setText("Segmentar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Image.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ImageMouseClicked(evt);
            }
        });

        jButton2.setText("Mostrar Segmentação");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("BlurLevel");

        jLabel2.setText("CorLevel");

        jLabel3.setText("SizeLevel");

        jLabel4.setText("Número de Segmentações: ");

        jButton3.setText("Abrir Imagem");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("+");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        jButton5.setText("Pesquisar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jComboBox1.setMaximumRowCount(4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(jButton5))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton4))
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel4))
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                        .addGap(145, 145, 145)
                        .addComponent(Image, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(219, 219, 219))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 11, Short.MAX_VALUE)
                        .addComponent(Image, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );

        Image.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    /**
        Método que coloca a imagem segmentada no label Image usando os valores de blur, cor, min e filename,
        define o tamanho da label de acordo com o tamanho da imagem e define a quantidade total de regiões segmentadas. .
    */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
         
            writeFiles.writeFileValue(imageTreatment.getFilename(), jTextField1.getText(), jTextField2.getText(), jTextField3.getText());
                
            manager.saveInformation(imageTreatment, jTextField1.getText(), jTextField2.getText(), jTextField3.getText());
            
            seg        = imageTreatment.imageSegmentation(imageTreatment.getFilename(), imageTreatment.getBlurLevel(), imageTreatment.getColor(), imageTreatment.getMinSize());
            Image.setIcon(imageTreatment.markedImage(seg));
            
            
            setRegionsNames = fileToTAD.nameAllRegions();
            
            jLabel4.setText("Número de Segmentações: " + imageTreatment.totalRegions(seg));
                      
            listInt = tadManipulation.addValue(listInt, seg.getTotalRegions());
        }
        catch(NullPointerException erro){
            JOptionPane.showMessageDialog(null,"A segmentação não ocorreu, pois nenhuma imagem foi escolhida.", "Imagem",  JOptionPane.INFORMATION_MESSAGE);
        }
        catch(NumberFormatException erro){
            JOptionPane.showMessageDialog(null,"A segmentação não ocorreu, pois os valores não estão no formato correto.", "Valores",  JOptionPane.INFORMATION_MESSAGE);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
        Método que coloca a imagem rotulada no label Image, usando os valores de blur, cor, min e filename
    */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        
        try{
            
            manager.saveInformation(imageTreatment, jTextField1.getText(), jTextField2.getText(), jTextField3.getText());
            
            Image.setIcon(toColor.colorSegmentation(seg));
            
        }
        catch(Exception NullPointerException){
            JOptionPane.showMessageDialog(null,"A segmentação não ocorreu, pois nenhuma imagem foi escolhida.", "Imagem",  JOptionPane.INFORMATION_MESSAGE);
            }
        
        
        }//GEN-LAST:event_jButton2ActionPerformed
        
    /**
        Método que cria o botão Abrir Arquivo, define o caminho até a imagem e coloca no label Image.
    */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        manager.openFile(Image, imageTreatment, listInt, jList1, list, map);
        
        listInt.clear();
        
    }//GEN-LAST:event_jButton3ActionPerformed
    
    /**
     * Método para salvar novas regiões da imagem.
     * @param evt 
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(mouseX1 == 0 || mouseY1 == 0)
            JOptionPane.showMessageDialog(null,"A área não pode ser registrada, pois não foi selecionada na imagem.", "Arquivo",  JOptionPane.INFORMATION_MESSAGE);
        else if(jTextField4.getText() == null)
            JOptionPane.showMessageDialog(null,"A área não pode ser registrada, pois não foi definido um nome.", "Arquivo",  JOptionPane.INFORMATION_MESSAGE);
        else if(checking.checkName(list, jTextField4.getText()))
            JOptionPane.showMessageDialog(null,"A área não pode ser registrada, pois já existe uma área com esse nome.", "Arquivo",  JOptionPane.INFORMATION_MESSAGE);
        else if(checking.checkRegion(list, map, imageTreatment.defineRegion(mouseX1, mouseY1, seg), seg))
            JOptionPane.showMessageDialog(null,"A área não pode ser registrada, pois essa área já foi registrada.", "Arquivo",  JOptionPane.INFORMATION_MESSAGE);

        else{
            writeFiles.writeInFileRegions(imageTreatment.getFilename(), jTextField4.getText(), Integer.toString(mouseX1), Integer.toString(mouseY1), Integer.toString(mouseX2), Integer.toString(mouseY2));
            manager.transformTextJList1(imageTreatment, jList1, list, map);
        }   
        
        mouseX1=0;
        mouseX2=0;
        mouseY1=0;
        mouseY2=0;
        initRegions();
        map = fileToTAD.transformToMap(imageTreatment.getFilename());
    }//GEN-LAST:event_jButton4ActionPerformed
    
    /**
     * Método para capturar as coordenas da imagem clicadas pelo mouse.
     * @param evt 
     */
    private void ImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ImageMouseClicked
        int region = 0;
        if(mouseX1 == 0 && mouseY1 == 0){
            mouseX1 = evt.getX();
            mouseY1 = evt.getY();
            region = imageTreatment.defineRegion(mouseX1, mouseY1, seg);
            System.out.println(mouseX1+","+mouseY1+","+region);
        }
        else{
            mouseX2 = evt.getX();
            mouseY2 = evt.getY();
            region = imageTreatment.defineRegion(mouseX2, mouseY2, seg);
            System.out.println(mouseX2+","+mouseY2+","+region+"mouse2");
        }
    }//GEN-LAST:event_ImageMouseClicked
    
    /**
     * Método para realizar eventos quando o mouse clickar em algum elemento da Jlist1.
     * @param evt 
     */
    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (evt.getClickCount() == 2) {
            int index = jList1.locationToIndex(evt.getPoint());
            if (index >= 0) {
                Object o = jList1.getModel().getElementAt(index);
                Integer coordenadas[] = map.get(o.toString());
                System.out.println(map.get("blusa"));
                int region1 = imageTreatment.defineRegion(coordenadas[0], coordenadas[1], seg);
                
                int region2;
                if (coordenadas[2] != 0 && coordenadas[3] != 0){
                    region2 = imageTreatment.defineRegion(coordenadas[2], coordenadas[3], seg);
                    Image.setIcon(toColor.whitening(seg, region2, listInt));
                }
                
                Image.setIcon(toColor.whitening(seg, region1, listInt));

          }
        }
    }//GEN-LAST:event_jList1MouseClicked
    
    /**
     * Método para realizar eventos quando o mouse clickar em algum elemento da Jlist2.
     * @param evt 
     */
    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        if (evt.getClickCount() == 2) {
            int index = jList2.locationToIndex(evt.getPoint());
            if (index >= 0) {
                Object o = jList2.getModel().getElementAt(index);
                System.out.println(map.get("blusa"));       
                manager.readValues(o.toString(), imageTreatment, jTextField1, jTextField2, jTextField3);
                
                seg        = imageTreatment.imageSegmentation(imageTreatment.getFilename(), imageTreatment.getBlurLevel(), imageTreatment.getColor(), imageTreatment.getMinSize());
                Image.setIcon(imageTreatment.markedImage(seg));
                manager.transformTextJList1(imageTreatment, jList1, list, map);
                map = fileToTAD.transformToMap(imageTreatment.getFilename());
                listInt.clear();
                listInt = tadManipulation.addValue(listInt, seg.getTotalRegions());
             }
        }
        
    }//GEN-LAST:event_jList2MouseClicked
    
    /**
     * Método para ao clickar no botão "Pesquisar" e pegar o elemento do jComboBox para fazer uma busca de imagens a
     * partir do elemento do jComoBox.
     * @param evt 
     */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String selected = jComboBox1.getSelectedItem().toString();
        System.out.println(System.getProperty("user.dir")+"\\imgs");
        
        try {
            manager.transformTextJList2(selected, jList2, listRegions);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        
       
    }//GEN-LAST:event_jButton5ActionPerformed
    /**
        Método que Inicializa o jComboBox com todas as regiões.
    */
    private void initRegions(){
        try {
            setRegionsNames = fileToTAD.nameAllRegions();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
   
        jComboBox1.removeAllItems();
        Iterator<String> it = setRegionsNames.iterator();
        while(it.hasNext()){
            jComboBox1.addItem(it.next());
        }
        
        Iterator<String> ite = setRegionsNames.iterator();
        while(ite.hasNext()){
            System.out.println(ite.next());
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Image;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
